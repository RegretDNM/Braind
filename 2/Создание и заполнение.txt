Примечание: скрипты написаны под PostgresSQL.

///////////////////

create table if not exists tag (
	id serial not null,
	"name" text not null,
	constraint tag_pk primary key (id)
)

create table if not exists article (
	id serial not null,
	"header" text not null,
	announce_description text not null,
	detailed_description text not null,
	tag_id int not null,
	constraint article_pk primary key (id),
	constraint article_fk foreign key (tag_id)
		references tag (id)
)

create table if not exists article_additional_fields (
	id serial not null,
	"name" text not null,
	"type" text not null,
	"value" text not null,
	article_id int not null,
	constraint article_additional_fields_pk primary key (id),
	constraint article_additional_fields_fk foreign key (article_id)
		references article (id)
)

create table if not exists "user" (
	id serial not null,
	name text not null,
	constraint user_pk primary key (id)
)

create table if not exists articles_to_users (
	article_id int not null,
	user_id int not null,
	constraint articles_to_users_pk primary key (article_id, user_id),
	constraint articles_to_users_fk_articles foreign key (article_id)
		references article (id),
	constraint articles_to_users_fk_users foreign key (user_id)
		references "user" (id)
)

create table if not exists "comment" (
	id serial not null,
	"text" text not null,
	article_id int not null,
	user_id int not null,
	constraint comment_pk primary key (id),
	constraint comment_fk_articles foreign key (article_id)
		references article (id),
	constraint comment_fk_users foreign key (user_id)
		references "user" (id)
)

create table if not exists score (
	article_id int not null,
	user_id int not null,
	score smallint not null,
	constraint score_pk primary key (article_id, user_id),
	constraint score_fk_articles foreign key (article_id)
		references article (id),
	constraint score_fk_users foreign key (user_id)
		references "user" (id)
)

create table if not exists category (
	id serial not null,
	"name" text not null 
)

create table if not exists articles_to_categories (
	article_id int not null,
	category_id int not null,
	constraint articles_to_categories_pk primary key (article_id, category_id),
	constraint articles_to_categories_fk_articles foreign key (article_id)
		references article (id),
	constraint articles_to_categories_fk_users foreign key (category_id)
		references "user" (id)
)

insert into tag ("name") values ('Articles'), ('Not articles');

insert into "user" ("name") values ('Иванов Иван Иванович'), ('Улыбочкина Галина Бланка'), ('Просто зашёл почитать');

insert into category ("name") values ('Новости'), ('Научпоп'), ('Публицистика');

insert into article ("header", announce_description, detailed_description, tag_id)
values ('Шапка', 'Анонсовое описание', 'Более детальное описание', 1),
	('Шапка2', 'Анонсовое описание', 'Чуть более детальное описание', 1),
	('Шапка3', 'Третье анонсовое описание', 'Ещё более детальное описание', 1);

insert into article_additional_fields ("name", "type", "value", article_id)
values ('smth1', 'int', '1974', 3),
('smth2', 'string', 'some text', 2);

insert into articles_to_categories (article_id, category_id)
values (1, 1), (2, 3), (3, 3);

insert into articles_to_users (article_id, user_id)
values (1, 1), (2, 2), (3, 2);

insert into "comment" (article_id, user_id, "text")
values (1, 3, '*хвалебный комментарий*'),
	(2, 3, '*не очень лестный комментарий*'),
	(2, 2, '*не очень вежливый ответ*'),
	(2, 3, 'завершение общения');

insert into score (article_id, user_id, score)
values (1, 3, 5), (1, 2, 4), (2, 1, 4), (2, 3, 1), (3, 3, 5);